@model ES.Data.Model.StorageBox
@using ES.Data.Model;
@using ES.Data.Adapters;

<h4>StorageBox</h4>
<hr />

@*<div class="storagebox">
        <div class="row">
            <div class="col">
                <div class="drawer-editable">
                    <label>Drawer</label>
                </div>
            </div>
        </div>
    </div>*@




<table class="storagebox" num_rows="10" num_col="6">
    @{
        var adapter = new FileSystemDataAdapter();
        var cLayout = new StorageLayout(10, 6) { Id = 1 };
        adapter.AddStorageLayout(cLayout);
        var dr = new Drawer() { Id = 1, Place = new DrawerArea() { Id = 1 } };

        var layout = new FixedDataAdapter().Layout;
        int i = 0;
        List<DrawerArea> row;
        while ((row = layout.GetRow(i++)) != null)
        {
            <tr class="storagebox-row">

                @{ 
                    foreach (DrawerArea drawer in row)
                    {
                        var prefix = String.Format("btn_{0}_{1}_", drawer.Position.X, drawer.Position.Y);
                        var btn_top_id = prefix + "top";
                        var btn_right_id = prefix + "right";
                        var btn_bottom_id = prefix + "bottom";
                        var btn_left_id = prefix + "left";

                        var drawerId = "drawer_" + prefix;
                        var position = String.Format("({0}, {1})", drawer.Position.X, drawer.Position.Y);


                    <td  class="storagebox-col" rowspan="@drawer.RowSpan" colspan="@drawer.ColSpan">
                        <div class="drawer-editable" id="@drawerId">
                            <label>Drawer</label>
                            <table>
                                <tr>
                                    <td></td>
                                    <td>
                                        <button id="@btn_top_id" class="merge-btn" grid="@position" merge_type="top" disabled><i class="fas fa-table"></i> <i class="fas fa-long-arrow-alt-up"></i></button>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>
                                        <button id="@btn_left_id" class="merge-btn" grid="@position" merge_type="left" disabled><i class="fas fa-table"></i> <i class="fas fa-long-arrow-alt-left"></i></button>
                                    </td>
                                    <td></td>
                                    <td>
                                        <button id="@btn_right_id" class="merge-btn" grid="@position" merge_type="right"><i class="fas fa-table"></i> <i class="fas fa-long-arrow-alt-right"></i></button>
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <button id="@btn_bottom_id" class="merge-btn" grid="@position" merge_type="bottom"><i class="fas fa-table"></i> <i class="fas fa-long-arrow-alt-down"></i></button>
                                    </td>
                                    <td></td>
                                </tr>
                            </table>
                        </div>
                    </td>
                        }
                    }
            </tr>
        }
    }
    

</table>

<div class="row">
    <div class="col-md-4">

        @*<form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </form>*@
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
